JS: Refactor all id's & co with Element item attached to .entry elements
- HANDLE ITEMS RANGE /items?from=0&to=100
- Prototype fsQueue usage for long-running tasks (try with a fake process)
- See if types can be simplified when used from inside (ORM-like ?)
- for css not starting with '/' or 'http://' just compile it:
     scss.Scss().compile(css)
   and allow it inclusion in template
- make most of the javascript stuff generic, automated via special classes
- Use repoze.who for authentication (not a so good idea, see if authkit have a nicer integration)
- Rewrite & rename:
    PyRat[atouille] - Cooking The Web
        pyrat-init , pyrat-manage
- refactor actions
- add "embedded" modes in view/edit & co, that stays on page & disable headers
- First choice is misaka instead of markdown: http://misaka.61924.nl/
- pdf indexed via pyPdf or slate
- html indexed via html2text / html2rest (two new actions)
- export presentations via landslide
- Includes an automatic image gallery in listing mode with a div id=image_gallery : http://nivo.dev7studios.com/#usage
- possibility to select docs to move them or remove them (listing mode)
- output complex pdfs from multiple documents (xhtml2pdf + pypdf ?)
  => pdf compilation (pypdf, http://pypi.python.org/pypi/xhtml2pdf/0.0.3)
- add login icon when not logged-in, that asks for login & password
- add ad-hoc password by object, which asks for password if authorized (in all cases but admin & owner)
- add option to apply permissions on all sub-directories
- add possibility to edit partial content of markdown from view page
